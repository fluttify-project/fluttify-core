import proguard.gradle.ProGuardTask

buildscript {
    repositories {
        mavenCentral()
    }

    dependencies {
        classpath 'net.sf.proguard:proguard-gradle:6.2.2'
    }
}

plugins {
    id 'java'
    id 'maven'
    id 'java-gradle-plugin'
    id 'org.jetbrains.kotlin.jvm' version '1.3.31'
}

group 'me.yohom'
version '0.4.0'

repositories {
    jcenter()
    mavenCentral()
}

jar {
    from('src/main/java') {
        include 'resources/tmpl/**/*.tmpl'
    }
}

dependencies {
    // https://mvnrepository.com/artifact/org.junit.jupiter/junit-jupiter-api
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.6.0-M1'
    implementation 'org.jboss.windup.decompiler:decompiler-fernflower:4.2.1.Final'
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8"
    implementation 'org.antlr:antlr4-runtime:4.7.2'
    implementation 'commons-io:commons-io:2.6'
    implementation 'com.google.code.gson:gson:2.8.5'
    implementation "org.jetbrains.kotlin:kotlin-reflect:1.3.31"
    // okhttp
    implementation "com.squareup.okhttp3:okhttp:3.14.0"
    // zip https://github.com/zeroturnaround/zt-zip
    implementation 'org.zeroturnaround:zt-zip:1.13'
}

// 混淆任务
task proguard(type: ProGuardTask, dependsOn: compileJava) {
    // 输出混淆前->混淆后的映射
    printmapping "$buildDir/mapping.txt"
    // 混淆规则文件
    configuration 'proguard-rules.pro'

    // 混淆时依赖的库
    libraryjars files(configurations.compile.findAll {}.collect())
    libraryjars "${System.getProperty('java.home')}/lib/rt.jar"
    libraryjars "${System.getProperty('java.home')}/lib/jce.jar"

    // 混淆输入
    injars sourceSets.main.output
    // 混淆输出
    outjars "$buildDir/classes-pro"
}