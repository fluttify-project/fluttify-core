import 'package:flutter/services.dart';

import 'package:#__current_package__#.dart';

// ignore_for_file: non_constant_identifier_names, camel_case_types
class ObjectFactory_Android {
  static final _channel = MethodChannel('#__method_chanel__#');

  static Future<android_app_Application> getandroid_app_Application() async {
    final refId =
        await _channel.invokeMethod('ObjectFactory::getandroid_app_Application');
    return android_app_Application.withRefId(refId);
  }

  static Future<android_app_Activity> getandroid_app_Activity() async {
    final refId =
        await _channel.invokeMethod('ObjectFactory::getandroid_app_Activity');
    return android_app_Activity.withRefId(refId);
  }

  static Future<android_os_Bundle> createandroid_os_Bundle() async {
    final refId =
        await _channel.invokeMethod('ObjectFactory::createandroid_os_Bundle');
    return android_os_Bundle.withRefId(refId);
  }

  static Future<String> release(int refId) async {
    return await _channel.invokeMethod('ObjectFactory::release', {'refId': refId});
  }

  static Future<android_app_Activity> clearRefMap() async {
    return await _channel.invokeMethod('ObjectFactory::clearRefMap');
  }

  #__create_objects__#
}

class android_content_Context extends Ref_Android {
  android_content_Context.withRefId(int refId)  : super.withRefId(refId);
}

class android_app_Application extends android_content_Context {
  android_app_Application.withRefId(int refId) : super.withRefId(refId);
}

class android_app_Activity extends android_content_Context {
  android_app_Activity.withRefId(int refId) : super.withRefId(refId);
}

class android_os_Bundle extends Ref_Android {
  android_os_Bundle.withRefId(int refId) : super.withRefId(refId);
}