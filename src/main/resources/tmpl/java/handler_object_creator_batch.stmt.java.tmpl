// factory
put("ObjectFactory::create_batch#__creator_name__#", (argsBatch, methodResult) -> {
    List<Integer> resultList = new ArrayList<>();

    int length = 0;
    // when batch size is 0, dart side will put a map with key 'length' to indicate the length
    // of this batch
    if (argsBatch instanceof Map) {
        length = (Integer) ((Map<String, Object>) argsBatch).get("length");
    }
    // or directly put the arg batch
    else if (argsBatch instanceof List) {
        length = ((List<Map<String, Object>>) argsBatch).size();
    }

    for (int __i__ = 0; __i__ < length; __i__++) {
        Map<String, Object> args = new HashMap<>();
        // only when arg batch is not empty, java side needs to parse args;
        if (argsBatch instanceof List) {
            args = ((List<Map<String, Object>>) argsBatch).get(__i__);
        }

        // args
        #__args__#;

        // create target object
        #__class_name__# obj = new #__class_name__#(#__args_value__#);
        getHEAP().put(System.identityHashCode(obj), obj);

        // print current HEAP
        if (getEnableLog()) {
            Log.d("ObjectFactory", "HEAP: " + getHEAP());
        }

        resultList.add(System.identityHashCode(obj));
    }

    methodResult.success(resultList);
});