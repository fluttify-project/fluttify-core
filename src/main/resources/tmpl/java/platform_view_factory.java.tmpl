//////////////////////////////////////////////////////////
// GENERATED BY FLUTTIFY. DO NOT EDIT IT.
//////////////////////////////////////////////////////////

package #__package_name__#

import android.content.Context
import android.view.View
import android.util.Log
import io.flutter.plugin.common.MethodChannel
import io.flutter.plugin.common.PluginRegistry.Registrar
import io.flutter.plugin.common.StandardMessageCodec
import io.flutter.plugin.platform.PlatformView
import io.flutter.plugin.platform.PlatformViewFactory
import static me.yohom.foundation_fluttify.FoundationFluttifyPluginKt.getHEAP;

class #__factory_name__#Factory extends PlatformViewFactory {

    #__factory_name__#Factory(Registrar registrar) {
        super(StandardMessageCodec.INSTANCE);

        this.registrar = registrar;

        new MethodChannel(registrar.messenger(), "#__method_channel__#").setMethodCallHandler((methodCall, methodResult) -> {
                    Map<String, Object> args = (Map<String, Object>) methodCall.arguments;
                    Handler handler = handlerMap.get(methodCall.method);
                    if (handler != null) {
                        handler.call(args, methodResult);
                    } else {
                        methodResult.notImplemented();
                    }
                });
    }

    private Registrar registrar;

    private final Map<String, Handler> handlerMap = new HashMap<String, Handler>() {{
        #__handlers__#
    }};

    @Override
    public PlatformView create(Context context, int id, Object params) {
        return new PlatformView() {

            // add to HEAP
            @Override
            View getView() {
                #__native_view__# view = new #__native_view__#(registrar.activity());
                getHEAP.put(id, view);
                return view;
            }

            @Override
            void dispose() {}
        };
    }
}
